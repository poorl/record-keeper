swagger: "2.0"
info:
  description: "Butler X API is for physical record management"
  version: "1.0.0"
  title: "Butler X"
  contact:
    email: host.gbm.hss.it.hk.ss@noexternalmail.hsbc.com
host: "composed-task-186614.appspot.com"
tags:
- name: "ButlerX"
  description: "API for ButlerX"
schemes:
- "http"
paths:
  /record:
    post:
      tags:
      - "ButlerX"
      summary: "Create a record"
      description: "Create a record"
      operationId: "createRecord"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: body
        description: "Details of new record"
        schema:
           $ref: '#/definitions/RecordRequest'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/RecordDetails'
        400:
          description: Bad request. Invalid or missing ID
        500:
          description: Error in processing the request
  /record/list:
    get:
      tags:
      - "ButlerX"
      summary: "List of records"
      description: "Return list of record stored"
      operationId: "listRecord"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordDetails'
        400:
          description: Bad request. Invalid or missing ID
        500:
          description: Error in processing the request
  /record/{id}:
    get:
      tags:
      - "ButlerX"
      summary: "Details of a record"
      description: "Return details of record specified by ID"
      operationId: "getRecord"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        description: "ID of the record for details"
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/RecordDetails'
        400:
          description: Bad request. Invalid or missing ID
        500:
          description: Error in processing the request
    put:
      tags:
      - "ButlerX"
      summary: "Update an existing record"
      description: "Update an existing record"
      operationId: "updateRecord"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        description: "ID of the record for details"
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Updated details of specified record
        required: true
        schema:
          $ref: '#/definitions/RecordRequest'
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/RecordDetails'
        400:
          description: "Invalid ID supplied"
        404:
          description: "Record not found"
        405:
          description: "Validation exception"
    delete:
      tags:
      - "ButlerX"
      summary: "Delete an existing record"
      description: "Delete an existing record"
      operationId: "deleteRecord"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        description: "ID of the record to be deleted"
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/ResponseMessage'
        400:
          description: "Invalid ID supplied"
        404:
          description: "Record not found"
        405:
          description: "Validation exception"
  /record/exist/{id}:
    get:
      tags:
      - "ButlerX"
      summary: "Confirm record existence"
      description: "Confirm record existence"
      operationId: "confirmRecord"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        description: "ID of the record to confirm existence"
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/RecordDetails'
        400:
          description: Bad request. Invalid or missing ID
        500:
          description: Error in processing the request
  /record/location/start/{id}:
    get:
      tags:
      - "ButlerX"
      summary: "Start record checking at specified location"
      description: "Start record checking at specified location"
      operationId: "startLoc"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        description: "ID of the location start record checking"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        400:
          description: Bad request. Invalid or missing ID
        500:
          description: Error in processing the request
  /record/location/end/{id}:
    get:
      tags:
      - "ButlerX"
      summary: "Finish record checking at specified location"
      description: "Finish record checking at specified location"
      operationId: "finishLoc"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        description: "ID of the location finished record checking"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        400:
          description: Bad request. Invalid or missing ID
        500:
          description: Error in processing the request
definitions:
  RecordRequest:
    type: "object"
    required:
      - docDescription
    properties:
      borrower:
        type: string
      agreementDate:
        type: string
        format: date-time
      clientDescription:
        type: string
      roles:
        type: string
      legalCounsel:
        type: string
      docDescription:
        type: string
      numCopies:
        type: integer
        format: int64
      receiveDate:
        type: string
        format: date-time
      location:
        type: string
      originalCTC:
        type: string
      remarks:
        type: string
  RecordDetails:
    type: "object"
    required:
      - id
      - docDescription
    properties:
      id:
        type: "integer"
        format: "int64"
      borrower:
        type: string
      agreementDate:
        type: string
        format: date-time
      clientDescription:
        type: string
      roles:
        type: string
      legalCounsel:
        type: string
      docDescription:
        type: string
      numCopies:
        type: integer
        format: int64
      receiveDate:
        type: string
        format: date-time
      location:
        type: string
      originalCTC:
        type: string
      remarks:
        type: string
      updatePrepareBy:
        type: string
      updatePrepareDate:
        type: string
        format: date-time
      lastCheckedBy:
        type: string
      lastCheckedDate:
        type: string
        format: date-time
  ResponseMessage:
    type: "object"
    required:
      - message
    properties:
      message:
        type: string